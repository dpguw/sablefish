tempSeq <- NULL
tempSeq <- seq(w2outflow$Date2[i],(w2outflow$Date2[i]-4),by=-1)
tempMatch <- NULL
tempMatch <- match(tempSeq,dailyAmbient$Date2)
for(j in 1:4)
{
if(j==1)
{
dailyAmbient4dayValueDF[i,j]= mean(dailyAmbient$waterLevel[tempMatch])
}
if(j==2)
{
dailyAmbient4dayValueDF[i,j]= mean(dailyAmbient$airTemp[tempMatch])
}
if(j==3)
{
dailyAmbient4dayValueDF[i,j]= sum(dailyAmbient$precip[tempMatch])
}
if(j==4)
{
tempValue<-NULL
dailyAmbient4dayValueDF[i,j]= as.numeric(any(dailyAmbient$sso[tempMatch]==1))
}
if(j==5)
{
tempValue<-NULL
dailyAmbient4dayValueDF[i,j]= as.numeric(any(dailyAmbient$dam[tempMatch]==1))
}
}
print(i)
}
if(j==1)
{
dailyAmbient4dayValueDF[i,j]= mean(dailyAmbient$waterLevel[tempMatch])
}
dailyAmbient4dayValueDF <- data.frame(
waterLevel=rep(NA,nrow(w2outflow)),
airTemp=rep(NA,nrow(w2outflow)),
precip=rep(NA,nrow(w2outflow)),
sso=rep(NA,nrow(w2outflow)),
dam=rep(NA,nrow(w2outflow)))
for(i in 1:nrow(w2outflow))
{
tempSeq <- NULL
tempSeq <- seq(w2outflow$Date2[i],(w2outflow$Date2[i]-4),by=-1)
tempMatch <- NULL
tempMatch <- match(tempSeq,dailyAmbient$Date2)
for(j in 1:4)
{
if(j==1)
{
dailyAmbient4dayValueDF[i,j]= mean(dailyAmbient$waterLevel[tempMatch])
}
if(j==2)
{
dailyAmbient4dayValueDF[i,j]= mean(dailyAmbient$airTemp[tempMatch])
}
if(j==3)
{
dailyAmbient4dayValueDF[i,j]= sum(dailyAmbient$precip[tempMatch])
}
if(j==4)
{
tempValue<-NULL
dailyAmbient4dayValueDF[i,j]= as.numeric(any(dailyAmbient$sso[tempMatch]==1))
}
if(j==5)
{
tempValue<-NULL
dailyAmbient4dayValueDF[i,j]= as.numeric(any(dailyAmbient$dam[tempMatch]==1))
}
}
print(i)
}
dailyAmbient4dayValueDF
nrow(w2outflow)
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
View(dailyAmbient4dayValueDF)
dailyAmbient$dam
dailyAmbient$dam[tempMatch]
any(dailyAmbient$dam[tempMatch]==1)
as.numeric(any(dailyAmbient$dam[tempMatch]==1))
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
View(dailyAmbient4dayValueDF)
library(MASS)
View(`w1inflow`)
w1inflow[-,"dates"]
w1inflow[,-"dates"]
w1inflow[,!"dates"]
w1inflow[,-c("dates")]
w1inflow
w1inflow[,("dates")]
w1inflow[-("dates")]
w1inflow[,!("dates")]
w1inflow[,!c("dates")]
w1inflow[,-2]
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
head(dailyAmbient4dayValueDF)
summary( dailyAmbient4dayValueDF$dam)
table( dailyAmbient4dayValueDF$dam)
table(dailyAmbient4dayValueDF$sso)
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
dim(w1inflow)
dim( dailyAmbient4dayValueDF)
class((dailyAmbient4dayValueDF$dam))
dailyAmbient4dayValueDF$dam=as.factor(dailyAmbient4dayValueDF$dam)
dailyAmbient4dayValueDF$sso=as.factor(dailyAmbient4dayValueDF$sso)
class((dailyAmbient4dayValueDF$dam))
class(dailyAmbient4dayValueDF$sso)
head(w1inflow)
w1inflow[-2]
head( dailyAmbient4dayValueDF)
temp.w1.df=cbind(w1inflow[-2],dailyAmbient4dayValueDF[-1])
temp.w1.regression=lm(w1OutflowECavg~.,data=temp.w1.df)
temp.w1.step=step(temp.w1.regression)
temp.w1.step
temp.w1.regression
head(w1inflow)
head( dailyAmbient4dayValueDF)
temp.w1.df=cbind(w1inflow[-c("dates,Date2")],dailyAmbient4dayValueDF[-"date"])
temp.w1.df=cbind(w1inflow[-c("dates","Date2")],dailyAmbient4dayValueDF[-"date"])
dailyAmbient4dayValueDF[-"date"]
w1inflow[-c("dates","Date2")]
class(w1inflow)
mode(w1inflow)
subset(w1inflow,select=-c("dates","Date2"))
subset(w1inflow,select=-c(dates,Date2))
w1inflow[-c(dates,Date2)
]
w1inflow[!c("dates","Date2")
w1inflow[!c("dates","Date2")]
w1inflow[!c("dates","Date2")]
w1inflow[c("dates","Date2")]
temp.w1.df=cbind(subset(w1inflow,select=-c(dates,Date2)),
subset(dailyAmbient4dayValueDF,select= -"date")
temp.w1.df=cbind(subset(w1inflow,select=-c(dates,Date2)),
subset(dailyAmbient4dayValueDF,select= -"date"))
temp.w1.df=cbind(subset(w1inflow,select=-c(dates,Date2)),
subset(dailyAmbient4dayValueDF,select= -date))
w1inflow[-c("dates","Date2")]
temp.w1.df=cbind(subset(w1inflow,select=-c(dates,Date2)),
subset(dailyAmbient4dayValueDF,select= -date))
temp.w1.regression=lm(w1OutflowECavg~.,data=temp.w1.df)
temp.w1.step=step(temp.w1.regression)
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
temp.w1.step=step(temp.w1.regression)
summary(temp.w1.step)
head(w1inflow)
tempfile="C:/Users/Lynx/Documents/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/w1inflowCsv.csv"
w1inflow=read.csv(tempfile)
names(w1inflow)
tempfile="C:/Users/Lynx/Documents/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/w1outflowCsv.csv"
w1outflow=read.csv(tempfile)
names(w1outflow)
head((w1inflow))
head((w1Outflow))
head((w1outflow))
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
summary(temp.w1.step)
?step
temp.w1.step=step(temp.w1.regression,direction="both")
summary(temp.w1.step)
anova(temp.w1.step)
summary(lm(w1InflowECavg~AirTemp+Precip  ))
summary(lm(w1InflowECavg~AirTemp+Precip,data= temp.w1.df))
summary(lm(w1InflowECavg~Precip,data= temp.w1.df))
lm(w1InflowECavg~Precip,data= temp.w1.df)
summary(lm(w1InflowECavg~Precip,data= temp.w1.df))
temp.w1.out.df=cbind(subset(w1outflow,select=-c(dates,Date2)),
subset(dailyAmbient4dayValueDF,select= -date))
temp.w1.out.regression=lm(w1OutflowECavg~.,data=temp.w1.df)
temp.w1.out.step=step(temp.w1.regression,direction="both")
temp.w1.out.regression=lm(w1OutflowECavg~.,data=temp.w1.out.df)
temp.w1.out.step=step(temp.w1.regression,direction="both")
summary(temp.w1.out.step)
summary(lm(w1OutflowECavg~AirTemp+Precip,data=temp.w1.out.df))
summary(lm(w1OutflowECavg~Precip,data=temp.w1.out.df))
summary(lm(w1OutflowECavg~Precip+Turb,data=temp.w1.out.df))
temp.w1.out.step=step(temp.w1.regression,direction="backward")
temp.w1.out.regression=lm(w1OutflowECavg~.,data=temp.w1.out.df)
temp.w1.out.step=step(temp.w1.out.regression,direction="both")
summary(temp.w1.out.step)
summary(lm(w1OutflowECavg~Precip+Turb+SSO,data=temp.w1.out.df))
anova(lm(w1OutflowECavg~Precip+Turb+SSO,data=temp.w1.out.df))
summary(lm(w1OutflowECavg~Precip+Turb+SSO,data=temp.w1.out.df))
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
temp.w2.df=cbind(subset(w2inflow,select=-c(dates,Date2)),
subset(dailyAmbient4dayValueDF,select= -date))
temp.w2.regression=lm(w2InflowECavg~.,data=temp.w2.df)
temp.w2.step=step(temp.w2.regression,direction="both")
summary(temp.w2.step)
anova(temp.w2.step)
summary(temp.w2.step)
anova(temp.w2.step)
summary(temp.w2.step)
summary(lm(w2InflowECavg~Precip+HLR+HRT,data=temp.w2.df)
summary(lm(w2InflowECavg~Precip+HLR+HRT,data=temp.w2.df))
summary(lm(w2InflowECavg~Precip+HLR+HRT,data=temp.w2.df))
summary(lm(w2InflowECavg~Precip,data=temp.w2.df))
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
temp.w2.out.df=cbind(subset(w2outflow,select=-c(dates,Date2)),
subset(dailyAmbient4dayValueDF,select= -date))
temp.w2.out.regression=lm(w2OutflowECavg~.,data=temp.w2.out.df)
temp.w2.out.step=step(temp.w2.out.regression,direction="both")
summary(temp.w2.out.step)
lm(w2OutflowECavg~Precip+sso1,data=temp.w2.out.df)
lm(w2OutflowECavg~Precip+sso,data=temp.w2.out.df)
summary(lm(w2OutflowECavg~Precip+sso,data=temp.w2.out.df))
summary(lm(w2OutflowECavg~Precip+sso+Rwl,data=temp.w2.out.df))
#Precip and SSO important
summary(lm(w2OutflowECavg~Precip+sso,data=temp.w2.out.df))
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
summary(lm(w2OutflowECavg~Precip+sso+Turb,data=temp.w2.out.df))
#Precip Turb SSO important
summary(lm(w2OutflowECavg~Precip+sso+Turb,data=temp.w2.out.df))
summary(temp.w2.out.step)
summary(lm(w2OutflowECavg~Precip+sso+Turb+Temp,data=temp.w2.out.df))
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
plot(temp.w1.df$Precip,temp.w1.df$w1InflowECavg,pch=16,cex=1.1)
plot(log(temp.w1.df$Precip),temp.w1.df$w1InflowECavg,pch=16,cex=1.1)
plot(temp.w1.df$Precip,log(temp.w1.df$w1InflowECavg),pch=16,cex=1.1)
plot(temp.w1.df$Precip,temp.w1.df$w1InflowECavg,pch=16,cex=1.1)
title("w1 inflow")
windows()
plot(temp.w1.df$Precip,temp.w1.df$w1InflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipiation")
title("w1 inflow")
plot(temp.w1.df$Precip,temp.w1.df$w1InflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipiation")
title("w1 inflow")
plot(temp.w1.out.df$Precip,temp.w1.out.df$w1OutflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipiation")
title("w1 outflow")
plot(temp.w1.out.df$Turb,temp.w1.out.df$w1OutflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipitation")
plot(temp.w1.out.df$Turb,temp.w1.out.df$w1OutflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="Turb")
title("w1 outflow")
plot(temp.w2.df$Precip,temp.w2.df$w2InflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipitation")
title("w2 inflow")
windows()
plot(temp.w2.df$Precip,temp.w2.df$w2InflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipitation")
title("w2 outflow")
plot(temp.w1.out.df$Precip,temp.w1.out.df$w1OutflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipitation")
title("w1 outflow")
plot(temp.w2.out.df$Precip,temp.w2.out.df$w2OutflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipitation")
title("w2 outflow")
plot(temp.w2.out.df$Turb,temp.w2.out.df$w2OutflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="Turb")
title("w2 outflow")
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
anova(lm(w1OutflowECavg~Precip+Turb+SSO,data=temp.w1.out.df))
tempAnova=anova(lm(w1OutflowECavg~Precip+Turb+SSO,data=temp.w1.out.df))
names(tempAnova)
tempAnova[1,]
tempAnova$"Sum Sq"
sum(tempAnova$"Sum Sq")
5145467/ 8672355
1624435.4 / 8672355
299344.8/ 8672355
tempAnova=NULL
tempAnova=anova(lm(w1OutflowECavg~Precip+Turb+SSO,data=temp.w1.out.df))
#> tempAnova$"Sum Sq"
#[1] 5145466.9 1624435.4  299344.8 1603107.4
tempAnova=NULL
tempAnova=anova(lm(w1OutflowECavg~Precip+Turb+SSO,data=temp.w1.out.df))
tempAnova$"Sum Sq"
tempAnova=anova(lm(w2OutflowECavg~Precip+sso+Turb,data=temp.w2.out.df))
tempAnova$"Sum Sq"
sum(tempAnova$"Sum Sq")
3341836.7/7376146
1296487.0 /7376146
453538.4/7376146
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
View(temp.w1.df)
dim(temp.w1.df)
plo(lm(w1OutflowECavg~Precip))
plot(lm(w1OutflowECavg~Precip),data=temp.w1.out.df)
plot(lm(w1OutflowECavg~Precip,data=temp.w1.out.df))
with(temp.w1.out.df,
plot(w1OutflowECavg,Precip))
with(temp.w1.out.df,
plot(Precip,w1OutflowECavg))
with(temp.w2.out.df,
plot(Precip,w2OutflowECavg))
w2OutflowECavg
temp.w2.out.df$w2OutflowECavg
with(temp.w1.out.df,
plot(Precip,w1OutflowECavg))
.libPaths()
install.packages('FSA',
repos='http://www.rforge.net/',
dependencies="Depends")
install.packages(c('ALKr'),
repos="http://cran.us.r-project.org",
dependencies="Depends")
install.packages(c('reshape','ALKr'),
repos="http://cran.us.r-project.org",
dependencies="Depends")
library(FSA)
install.packages(c('reshape','ALKr','car'),
repos="http://cran.us.r-project.org",
dependencies="Depends")
install.packages(c("reshape", "ALKr", "car"), repos = "http://cran.us.r-project.org",
repos="http://cran.us.r-project.org",
dependencies="Depends")
install.packages(c('reshape','ALKr','car'),
repos="http://cran.us.r-project.org",
dependencies="Depends")
library(FSA)
install.packages(c('reshape','ALKr','car','gdata'),
repos="http://cran.us.r-project.org",
dependencies="Depends")
install.packages(c('gdata','Hmisc','stringr'),
repos="http://cran.us.r-project.org",
dependencies=TRUE)
library(FSA)
install.packages(c('gdata','Hmisc','stringr','formatR'),
repos="http://cran.us.r-project.org",
dependencies=TRUE)
library(FSA)
source("http://www.rforge.net/FSA/InstallFSA.R")
library(FSA)
source("http://www.rforge.net/FSA/InstallFSA.R")
install.packages('FSA',
repos='http://www.rforge.net/')
library(FSA)
source('~/GitHub/sablefish/scripts/TagOrgCalls1.R')
source('~/GitHub/sablefish/scripts/TagOrgFxns1.R')
source('~/GitHub/sablefish/scripts/TagOrgCalls1.R')
?ageKey
source('~/GitHub/sablefish/scripts/TagOrgCalls1.R')
####################################################
regionsList<- regionsListFxn()
####################################################
surveyLength <- surveyLengthReadInFxn(path=sableLengthDataPath,
head=FALSE)
#####################################################
surveyLength <- surveyLengthNamesFxn(surveyLength)
#####################################################
surveyLength <- maxLengthFxn(surveyLength,maxLength=100)
##########################################################
surveyLength<- surveyRegionFxn(df=surveyLength,
regionvec=regionVec,
regionslist=regionsList)
###########################################################
surveyLength <-lengthBinFxn(ageseq=lengthBinVec,
df=surveyLength,
dflength=surveyLength$lengthTrunc)
###########################################################
regionsVec <- regionsVecFxn()
######################################################
releases <- releasesReadInFxn(path=releasesPath)
releases <- releaseAreaFxn(releases,regionvec=regionVec)
releases <- subset(releases,!is.na(release.area))
releases <- subset(releases,!is.element(HArea,c(c(65,70))))
releases <- releasesLengthFxn(releases)
######################################################
regionYearDF <- regionYearDfFxn(tagyearvec=tagYears,
regionvec=regionVec)
#####################################################
yearList <- yearListFxn()
##################################################
maleRows <- lengthRowsFxn(tempSex=1,
regionyeardf=regionYearDF)
femaleRows <- lengthRowsFxn(tempSex=2,
regionyeardf=regionYearDF)
totalRows <- lengthRowsFxn(tempSex=c(1,2),
regionyeardf=regionYearDF)
##################################################
femaleLengths <- lengthsFxn(femaleRows,surveyLength$lengthTrunc)
maleLengths <- lengthsFxn(maleRows,surveyLength$lengthTrunc)
totalLengths <- lengthsFxn(totalRows,surveyLength$lengthTrunc)
##################################################
femaleCounts <- countsFxn(histFxn=lengthHistFxn,
lengthList=femaleLengths,
beginMid=44.5,
endMid=100.5)
maleCounts <- countsFxn(histFxn=lengthHistFxn,
lengthList=maleLengths,
beginMid=44.5,
endMid=100.5)
totalCounts <- countsFxn(histFxn=lengthHistFxn,
lengthList=totalLengths,
beginMid=44.5,
endMid=100.5)
##################################################
femalePercent <- percentSexFxn(percentVectorFxn,
fract=femaleCounts,
total=totalCounts,
min=45,max=100,
tempSex=2)
malePercent <- percentSexFxn(percentVectorFxn,
fract=maleCounts,
total=totalCounts,
min=45,max=100,
tempSex=1)
##################################################
femPercentDF<-femPercentDFfxn(sizerange=45:100,
regionyeardf=regionYearDF)
releases <- probFemReleaseVec(fempercentdf=femPercentDF,
releasesdf=releases)
#########################################################
releases <- assignSexWrapFxn(releasedf=releases)
#########################################################
replaceSexFxn(filename=recovLLtablePath,
beginYear=1983,
endYear=2009,
releasedf=releases,
minSize=450)
assignSexWrapFxn
source('~/GitHub/sablefish/scripts/TagOrgFxns1.R')
source('~/GitHub/sablefish/scripts/TagOrgCalls1.R')
####################################################
regionsList<- regionsListFxn()
####################################################
surveyLength <- surveyLengthReadInFxn(path=sableLengthDataPath,
head=FALSE)
#####################################################
surveyLength <- surveyLengthNamesFxn(surveyLength)
#####################################################
surveyLength <- maxLengthFxn(surveyLength,maxLength=100)
##########################################################
surveyLength<- surveyRegionFxn(df=surveyLength,
regionvec=regionVec,
regionslist=regionsList)
###########################################################
surveyLength <-lengthBinFxn(ageseq=lengthBinVec,
df=surveyLength,
dflength=surveyLength$lengthTrunc)
###########################################################
regionsVec <- regionsVecFxn()
######################################################
releases <- releasesReadInFxn(path=releasesPath)
releases <- releaseAreaFxn(releases,regionvec=regionVec)
releases <- subset(releases,!is.na(release.area))
releases <- subset(releases,!is.element(HArea,c(c(65,70))))
releases <- releasesLengthFxn(releases)
######################################################
regionYearDF <- regionYearDfFxn(tagyearvec=tagYears,
regionvec=regionVec)
#####################################################
yearList <- yearListFxn()
##################################################
maleRows <- lengthRowsFxn(tempSex=1,
regionyeardf=regionYearDF)
femaleRows <- lengthRowsFxn(tempSex=2,
regionyeardf=regionYearDF)
totalRows <- lengthRowsFxn(tempSex=c(1,2),
regionyeardf=regionYearDF)
##################################################
femaleLengths <- lengthsFxn(femaleRows,surveyLength$lengthTrunc)
maleLengths <- lengthsFxn(maleRows,surveyLength$lengthTrunc)
totalLengths <- lengthsFxn(totalRows,surveyLength$lengthTrunc)
##################################################
femaleCounts <- countsFxn(histFxn=lengthHistFxn,
lengthList=femaleLengths,
beginMid=44.5,
endMid=100.5)
maleCounts <- countsFxn(histFxn=lengthHistFxn,
lengthList=maleLengths,
beginMid=44.5,
endMid=100.5)
totalCounts <- countsFxn(histFxn=lengthHistFxn,
lengthList=totalLengths,
beginMid=44.5,
endMid=100.5)
##################################################
femalePercent <- percentSexFxn(percentVectorFxn,
fract=femaleCounts,
total=totalCounts,
min=45,max=100,
tempSex=2)
malePercent <- percentSexFxn(percentVectorFxn,
fract=maleCounts,
total=totalCounts,
min=45,max=100,
tempSex=1)
##################################################
femPercentDF<-femPercentDFfxn(sizerange=45:100,
regionyeardf=regionYearDF)
########################################################
releases <- probFemReleaseVec(fempercentdf=femPercentDF,
releasesdf=releases)
#########################################################
releases <- assignSexWrapFxn(releasedf=releases)
releases <- assignSexWrapFxn(releasedf=releases)
assignSexWrapFxn
assignSexFxn
source('~/GitHub/sablefish/scripts/TagOrgFxns1.R')
releases <- probFemReleaseVec(fempercentdf=femPercentDF,
releasesdf=releases)
head(releases)
source('~/GitHub/sablefish/scripts/TagOrgFxns1.R')
source('~/GitHub/sablefish/scripts/TagOrgFxns1.R')
releases <- assignSexWrapFxn(releasedf=releases)
head(releases)
table(releases$sex[which(releases$lengthTrunc>80)])
ageKey
