#add R date class to w2outflow table as "Date2"
w2outflow$Date2=as.Date(as.character(w2outflow$date), "%m/%d/%y")
summary(w2outflow$Date2)
w2outflow$Date2
?assign
w2outflow$Date2[1]
w2outflow$Date2[1]:((w2outflow$Date2[1]-4))
(w2outflow$Date2[1]-4)
# Read in dailyAmbientCsv and fill in NAs
tempfile="C:/Users/Lynx/Documents/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/dailyAmbientCsv.csv"
dailyAmbient=read.csv(tempfile)
names(dailyAmbient)
#add R date class to dailyAmbient table as "Date2"
dailyAmbient$Date2=as.Date(as.character(dailyAmbient$date), "%m/%d/%y")
summary(dailyAmbient$Date2)
as.character(dailyAmbient$date)
dailyAmbient$Date2=as.Date(as.character(dailyAmbient$date), "%m/%d/%Y")
summary(dailyAmbient$Date2)
w2outflow$Date2[1]:(w2outflow$Date2[1]-4)
w2outflow$Date2[1]
as.character(w2outflow$date)
as.character(w2inflow$date)
as.character(w1outflow$date)
#4 regressions wetland by inflow/outflow
#dependent variable ec.average
#independent variables:
#location variable (wetland x flow location): DO_mg/L,pH  Temp,	Turb
#ambient variables (all wetlands): AirTemp,	Precip	Rwl	,Solar	SSO
#wetland variables (wetland): BM#  ,HLR	,HRT,	WL
#daily ambient (all wetlands): waterLevel , airTemp,	precip,	sso	dam
#Note for daily ambient: NAs will be replaced with median values
# for waterlevel and with 0s for precipitation
############################################
# Read in dailyAmbientCsv and fill in NAs
tempfile="C:/Users/Lynx/Documents/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/dailyAmbientCsv.csv"
dailyAmbient=read.csv(tempfile)
names(dailyAmbient)
#add R date class to dailyAmbient table as "Date2"
dailyAmbient$Date2=as.Date(as.character(dailyAmbient$date), "%m/%d/%Y")
summary(dailyAmbient$Date2)
#fill in NAs for waterLevel in dailyAmbient
dailyAmbient$waterLevel[which(is.na(dailyAmbient$waterLevel))]=(
median(dailyAmbient$waterLevel,na.rm=T) )
#fill in NAs with 0s for precipitation in dailyAmbient
dailyAmbient$waterLevel[which(is.na(dailyAmbient$precip))]=0
##########################################################
#read in w1inflow data table
tempfile="C:/Users/Lynx/Documents/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/w1inflowCsv.csv"
w1inflow=read.csv(tempfile)
names(w1inflow)
#add R date class to w1inflow table as "Date2"
w1inflow$Date2=as.Date(as.character(w1inflow$date), "%m/%d/%Y")
summary(w1inflow$Date2)
##############################################################
#read in w1inflow data table
tempfile="C:/Users/Lynx/Documents/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/w1outflowCsv.csv"
w1outflow=read.csv(tempfile)
names(w1outflow)
#add R date class to w1outflow table as "Date2"
w1outflow$Date2=as.Date(as.character(w1outflow$date), "%m/%d/%Y")
summary(w1outflow$Date2)
head(w1outflow,1)
######################################################
#read in w2inflow data table
tempfile="C:/Users/Lynx/Documents/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/w2inflowCsv.csv"
w2inflow=read.csv(tempfile)
names(w2inflow)
#add R date class to w2inflow table as "Date2"
w2inflow$Date2=as.Date(as.character(w2inflow$date), "%m/%d/%Y")
summary(w2inflow$Date2)
######################################################
#w2 outflow readin
#read in w2outflow data table
tempfile="C:/Users/Lynx/Documents/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/w2outflowCsv.csv"
w2outflow=read.csv(tempfile)
names(w2outflow)
#add R date class to w2outflow table as "Date2"
w2outflow$Date2=as.Date(as.character(w2outflow$date), "%m/%d/%Y")
summary(w2outflow$Date2)
##################################################
###############################################################
# create new variables from dailyAmbient by binning over
# 4 days previous to sampling date. For waterlevel and
#airtemp, take mean. For precip, take sum. For sso/dam, take
#if one of days is 1, then value is 1, if all zero, then zero
w2outflow$Date2[1]:(w2outflow$Date2[1]-4)
w2outflow$Date2[1]
as.posixct(w2outflow$Date2[1])
as.POSIXct(w2outflow$Date2[1])
as.POSIXct(w2outflow$Date2[1])-1
w2outflow$Date2[1]-4
seq(w2outflow$Date2[1],(w2outflow$Date2[1]-4))
seq(w2outflow$Date2[1],(w2outflow$Date2[1]-4),by=1)
seq(w2outflow$Date2[1],(w2outflow$Date2[1]-4),by=1)
seq(w2outflow$Date2[1],(w2outflow$Date2[1]-4),by="1 day")
seq(w2outflow$Date2[1],(w2outflow$Date2[1]-4),by="-1 day")
seq(w2outflow$Date2[1],(w2outflow$Date2[1]-4),by=-1)
w2outflow$Date2[1]
nrow(w2outflow)
names(dailyAmbient)
as.numeric(TRUE)
dailyAmbient$dam
dailyAmbient$sso
data.frame(
waterLevel=rep(NA,nrow(w2outflow)),
airTemp=rep(NA,nrow(w2outflow)),
precip=rep(NA,nrow(w2outflow)),
sso=rep(NA,nrow(w2outflow)),
dam=rep(NA,nrow(w2outflow)))
for(i in 1:nrow(w2outflow))
{
tempSeq <- NULL
tempSeq <- seq(w2outflow$Date2[i],(w2outflow$Date2[i]-4),by=-1)
tempMatch <- NULL
tempMatch <- match(tempSeq,dailyAmbient$Date2)
for(j in 1:4)
{
if(j==1)
{
[i,j]= mean(dailyAmbient$waterLevel[tempMatch])
}
if(j==2)
{
[i,j]= mean(dailyAmbient$airTemp[tempMatch])
}
if(j==3)
{
[i,j]= sum(dailyAmbient$precip[tempMatch])
}
if(j==4)
{
tempValue<-NULL
[i,j]= as.numeric(any(dailyAmbient$sso[tempMatch]==1))
}
if(j==5)
{
tempValue<-NULL
[i,j]= as.numeric(any(dailyAmbient$dam[tempMatch]==1))
}
}
print(i)
}
i
i=1
tempSeq <- NULL
tempSeq <- seq(w2outflow$Date2[i],(w2outflow$Date2[i]-4),by=-1)
tempMatch <- NULL
tempMatch <- match(tempSeq,dailyAmbient$Date2)
j=1
if(j==1)
{
for(i in 1:nrow(w2outflow))
{
tempSeq <- NULL
tempSeq <- seq(w2outflow$Date2[i],(w2outflow$Date2[i]-4),by=-1)
tempMatch <- NULL
tempMatch <- match(tempSeq,dailyAmbient$Date2)
for(j in 1:4)
{
if(j==1)
{
dailyAmbient4dayValueDF[i,j]= mean(dailyAmbient$waterLevel[tempMatch])
}
if(j==2)
{
dailyAmbient4dayValueDF[i,j]= mean(dailyAmbient$airTemp[tempMatch])
}
if(j==3)
{
dailyAmbient4dayValueDF[i,j]= sum(dailyAmbient$precip[tempMatch])
}
if(j==4)
{
tempValue<-NULL
dailyAmbient4dayValueDF[i,j]= as.numeric(any(dailyAmbient$sso[tempMatch]==1))
}
if(j==5)
{
tempValue<-NULL
dailyAmbient4dayValueDF[i,j]= as.numeric(any(dailyAmbient$dam[tempMatch]==1))
}
}
print(i)
}
if(j==1)
{
dailyAmbient4dayValueDF[i,j]= mean(dailyAmbient$waterLevel[tempMatch])
}
dailyAmbient4dayValueDF <- data.frame(
waterLevel=rep(NA,nrow(w2outflow)),
airTemp=rep(NA,nrow(w2outflow)),
precip=rep(NA,nrow(w2outflow)),
sso=rep(NA,nrow(w2outflow)),
dam=rep(NA,nrow(w2outflow)))
for(i in 1:nrow(w2outflow))
{
tempSeq <- NULL
tempSeq <- seq(w2outflow$Date2[i],(w2outflow$Date2[i]-4),by=-1)
tempMatch <- NULL
tempMatch <- match(tempSeq,dailyAmbient$Date2)
for(j in 1:4)
{
if(j==1)
{
dailyAmbient4dayValueDF[i,j]= mean(dailyAmbient$waterLevel[tempMatch])
}
if(j==2)
{
dailyAmbient4dayValueDF[i,j]= mean(dailyAmbient$airTemp[tempMatch])
}
if(j==3)
{
dailyAmbient4dayValueDF[i,j]= sum(dailyAmbient$precip[tempMatch])
}
if(j==4)
{
tempValue<-NULL
dailyAmbient4dayValueDF[i,j]= as.numeric(any(dailyAmbient$sso[tempMatch]==1))
}
if(j==5)
{
tempValue<-NULL
dailyAmbient4dayValueDF[i,j]= as.numeric(any(dailyAmbient$dam[tempMatch]==1))
}
}
print(i)
}
dailyAmbient4dayValueDF
nrow(w2outflow)
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
View(dailyAmbient4dayValueDF)
dailyAmbient$dam
dailyAmbient$dam[tempMatch]
any(dailyAmbient$dam[tempMatch]==1)
as.numeric(any(dailyAmbient$dam[tempMatch]==1))
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
View(dailyAmbient4dayValueDF)
library(MASS)
View(`w1inflow`)
w1inflow[-,"dates"]
w1inflow[,-"dates"]
w1inflow[,!"dates"]
w1inflow[,-c("dates")]
w1inflow
w1inflow[,("dates")]
w1inflow[-("dates")]
w1inflow[,!("dates")]
w1inflow[,!c("dates")]
w1inflow[,-2]
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
head(dailyAmbient4dayValueDF)
summary( dailyAmbient4dayValueDF$dam)
table( dailyAmbient4dayValueDF$dam)
table(dailyAmbient4dayValueDF$sso)
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
dim(w1inflow)
dim( dailyAmbient4dayValueDF)
class((dailyAmbient4dayValueDF$dam))
dailyAmbient4dayValueDF$dam=as.factor(dailyAmbient4dayValueDF$dam)
dailyAmbient4dayValueDF$sso=as.factor(dailyAmbient4dayValueDF$sso)
class((dailyAmbient4dayValueDF$dam))
class(dailyAmbient4dayValueDF$sso)
head(w1inflow)
w1inflow[-2]
head( dailyAmbient4dayValueDF)
temp.w1.df=cbind(w1inflow[-2],dailyAmbient4dayValueDF[-1])
temp.w1.regression=lm(w1OutflowECavg~.,data=temp.w1.df)
temp.w1.step=step(temp.w1.regression)
temp.w1.step
temp.w1.regression
head(w1inflow)
head( dailyAmbient4dayValueDF)
temp.w1.df=cbind(w1inflow[-c("dates,Date2")],dailyAmbient4dayValueDF[-"date"])
temp.w1.df=cbind(w1inflow[-c("dates","Date2")],dailyAmbient4dayValueDF[-"date"])
dailyAmbient4dayValueDF[-"date"]
w1inflow[-c("dates","Date2")]
class(w1inflow)
mode(w1inflow)
subset(w1inflow,select=-c("dates","Date2"))
subset(w1inflow,select=-c(dates,Date2))
w1inflow[-c(dates,Date2)
]
w1inflow[!c("dates","Date2")
w1inflow[!c("dates","Date2")]
w1inflow[!c("dates","Date2")]
w1inflow[c("dates","Date2")]
temp.w1.df=cbind(subset(w1inflow,select=-c(dates,Date2)),
subset(dailyAmbient4dayValueDF,select= -"date")
temp.w1.df=cbind(subset(w1inflow,select=-c(dates,Date2)),
subset(dailyAmbient4dayValueDF,select= -"date"))
temp.w1.df=cbind(subset(w1inflow,select=-c(dates,Date2)),
subset(dailyAmbient4dayValueDF,select= -date))
w1inflow[-c("dates","Date2")]
temp.w1.df=cbind(subset(w1inflow,select=-c(dates,Date2)),
subset(dailyAmbient4dayValueDF,select= -date))
temp.w1.regression=lm(w1OutflowECavg~.,data=temp.w1.df)
temp.w1.step=step(temp.w1.regression)
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
temp.w1.step=step(temp.w1.regression)
summary(temp.w1.step)
head(w1inflow)
tempfile="C:/Users/Lynx/Documents/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/w1inflowCsv.csv"
w1inflow=read.csv(tempfile)
names(w1inflow)
tempfile="C:/Users/Lynx/Documents/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/w1outflowCsv.csv"
w1outflow=read.csv(tempfile)
names(w1outflow)
head((w1inflow))
head((w1Outflow))
head((w1outflow))
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
summary(temp.w1.step)
?step
temp.w1.step=step(temp.w1.regression,direction="both")
summary(temp.w1.step)
anova(temp.w1.step)
summary(lm(w1InflowECavg~AirTemp+Precip  ))
summary(lm(w1InflowECavg~AirTemp+Precip,data= temp.w1.df))
summary(lm(w1InflowECavg~Precip,data= temp.w1.df))
lm(w1InflowECavg~Precip,data= temp.w1.df)
summary(lm(w1InflowECavg~Precip,data= temp.w1.df))
temp.w1.out.df=cbind(subset(w1outflow,select=-c(dates,Date2)),
subset(dailyAmbient4dayValueDF,select= -date))
temp.w1.out.regression=lm(w1OutflowECavg~.,data=temp.w1.df)
temp.w1.out.step=step(temp.w1.regression,direction="both")
temp.w1.out.regression=lm(w1OutflowECavg~.,data=temp.w1.out.df)
temp.w1.out.step=step(temp.w1.regression,direction="both")
summary(temp.w1.out.step)
summary(lm(w1OutflowECavg~AirTemp+Precip,data=temp.w1.out.df))
summary(lm(w1OutflowECavg~Precip,data=temp.w1.out.df))
summary(lm(w1OutflowECavg~Precip+Turb,data=temp.w1.out.df))
temp.w1.out.step=step(temp.w1.regression,direction="backward")
temp.w1.out.regression=lm(w1OutflowECavg~.,data=temp.w1.out.df)
temp.w1.out.step=step(temp.w1.out.regression,direction="both")
summary(temp.w1.out.step)
summary(lm(w1OutflowECavg~Precip+Turb+SSO,data=temp.w1.out.df))
anova(lm(w1OutflowECavg~Precip+Turb+SSO,data=temp.w1.out.df))
summary(lm(w1OutflowECavg~Precip+Turb+SSO,data=temp.w1.out.df))
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
temp.w2.df=cbind(subset(w2inflow,select=-c(dates,Date2)),
subset(dailyAmbient4dayValueDF,select= -date))
temp.w2.regression=lm(w2InflowECavg~.,data=temp.w2.df)
temp.w2.step=step(temp.w2.regression,direction="both")
summary(temp.w2.step)
anova(temp.w2.step)
summary(temp.w2.step)
anova(temp.w2.step)
summary(temp.w2.step)
summary(lm(w2InflowECavg~Precip+HLR+HRT,data=temp.w2.df)
summary(lm(w2InflowECavg~Precip+HLR+HRT,data=temp.w2.df))
summary(lm(w2InflowECavg~Precip+HLR+HRT,data=temp.w2.df))
summary(lm(w2InflowECavg~Precip,data=temp.w2.df))
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
temp.w2.out.df=cbind(subset(w2outflow,select=-c(dates,Date2)),
subset(dailyAmbient4dayValueDF,select= -date))
temp.w2.out.regression=lm(w2OutflowECavg~.,data=temp.w2.out.df)
temp.w2.out.step=step(temp.w2.out.regression,direction="both")
summary(temp.w2.out.step)
lm(w2OutflowECavg~Precip+sso1,data=temp.w2.out.df)
lm(w2OutflowECavg~Precip+sso,data=temp.w2.out.df)
summary(lm(w2OutflowECavg~Precip+sso,data=temp.w2.out.df))
summary(lm(w2OutflowECavg~Precip+sso+Rwl,data=temp.w2.out.df))
#Precip and SSO important
summary(lm(w2OutflowECavg~Precip+sso,data=temp.w2.out.df))
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
summary(lm(w2OutflowECavg~Precip+sso+Turb,data=temp.w2.out.df))
#Precip Turb SSO important
summary(lm(w2OutflowECavg~Precip+sso+Turb,data=temp.w2.out.df))
summary(temp.w2.out.step)
summary(lm(w2OutflowECavg~Precip+sso+Turb+Temp,data=temp.w2.out.df))
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
plot(temp.w1.df$Precip,temp.w1.df$w1InflowECavg,pch=16,cex=1.1)
plot(log(temp.w1.df$Precip),temp.w1.df$w1InflowECavg,pch=16,cex=1.1)
plot(temp.w1.df$Precip,log(temp.w1.df$w1InflowECavg),pch=16,cex=1.1)
plot(temp.w1.df$Precip,temp.w1.df$w1InflowECavg,pch=16,cex=1.1)
title("w1 inflow")
windows()
plot(temp.w1.df$Precip,temp.w1.df$w1InflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipiation")
title("w1 inflow")
plot(temp.w1.df$Precip,temp.w1.df$w1InflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipiation")
title("w1 inflow")
plot(temp.w1.out.df$Precip,temp.w1.out.df$w1OutflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipiation")
title("w1 outflow")
plot(temp.w1.out.df$Turb,temp.w1.out.df$w1OutflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipitation")
plot(temp.w1.out.df$Turb,temp.w1.out.df$w1OutflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="Turb")
title("w1 outflow")
plot(temp.w2.df$Precip,temp.w2.df$w2InflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipitation")
title("w2 inflow")
windows()
plot(temp.w2.df$Precip,temp.w2.df$w2InflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipitation")
title("w2 outflow")
plot(temp.w1.out.df$Precip,temp.w1.out.df$w1OutflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipitation")
title("w1 outflow")
plot(temp.w2.out.df$Precip,temp.w2.out.df$w2OutflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="precipitation")
title("w2 outflow")
plot(temp.w2.out.df$Turb,temp.w2.out.df$w2OutflowECavg,pch=16,cex=1.1,
ylab="E.coli",xlab="Turb")
title("w2 outflow")
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
anova(lm(w1OutflowECavg~Precip+Turb+SSO,data=temp.w1.out.df))
tempAnova=anova(lm(w1OutflowECavg~Precip+Turb+SSO,data=temp.w1.out.df))
names(tempAnova)
tempAnova[1,]
tempAnova$"Sum Sq"
sum(tempAnova$"Sum Sq")
5145467/ 8672355
1624435.4 / 8672355
299344.8/ 8672355
tempAnova=NULL
tempAnova=anova(lm(w1OutflowECavg~Precip+Turb+SSO,data=temp.w1.out.df))
#> tempAnova$"Sum Sq"
#[1] 5145466.9 1624435.4  299344.8 1603107.4
tempAnova=NULL
tempAnova=anova(lm(w1OutflowECavg~Precip+Turb+SSO,data=temp.w1.out.df))
tempAnova$"Sum Sq"
tempAnova=anova(lm(w2OutflowECavg~Precip+sso+Turb,data=temp.w2.out.df))
tempAnova$"Sum Sq"
sum(tempAnova$"Sum Sq")
3341836.7/7376146
1296487.0 /7376146
453538.4/7376146
source('~/Me Documents/Career/All Publication Documents/Publication/Statistics for James/Raw Data & Data Used for Analysis/regressionFolder/regressionScript1.R')
View(temp.w1.df)
dim(temp.w1.df)
plo(lm(w1OutflowECavg~Precip))
plot(lm(w1OutflowECavg~Precip),data=temp.w1.out.df)
plot(lm(w1OutflowECavg~Precip,data=temp.w1.out.df))
with(temp.w1.out.df,
plot(w1OutflowECavg,Precip))
with(temp.w1.out.df,
plot(Precip,w1OutflowECavg))
with(temp.w2.out.df,
plot(Precip,w2OutflowECavg))
w2OutflowECavg
temp.w2.out.df$w2OutflowECavg
with(temp.w1.out.df,
plot(Precip,w1OutflowECavg))
.libPaths()
install.packages('FSA',
repos='http://www.rforge.net/',
dependencies="Depends")
install.packages(c('ALKr'),
repos="http://cran.us.r-project.org",
dependencies="Depends")
install.packages(c('reshape','ALKr'),
repos="http://cran.us.r-project.org",
dependencies="Depends")
library(FSA)
install.packages(c('reshape','ALKr','car'),
repos="http://cran.us.r-project.org",
dependencies="Depends")
install.packages(c("reshape", "ALKr", "car"), repos = "http://cran.us.r-project.org",
repos="http://cran.us.r-project.org",
dependencies="Depends")
install.packages(c('reshape','ALKr','car'),
repos="http://cran.us.r-project.org",
dependencies="Depends")
library(FSA)
install.packages(c('reshape','ALKr','car','gdata'),
repos="http://cran.us.r-project.org",
dependencies="Depends")
install.packages(c('gdata','Hmisc','stringr'),
repos="http://cran.us.r-project.org",
dependencies=TRUE)
library(FSA)
install.packages(c('gdata','Hmisc','stringr','formatR'),
repos="http://cran.us.r-project.org",
dependencies=TRUE)
library(FSA)
source("http://www.rforge.net/FSA/InstallFSA.R")
library(FSA)
source("http://www.rforge.net/FSA/InstallFSA.R")
install.packages('FSA',
repos='http://www.rforge.net/')
library(FSA)
##################################################################
#set working directory to github main folder
#laptop settings
#setwd("C:/Users/Fantasia/Documents/GitHub/sablefish")
#workstation setings
setwd("C:/Users/Lynx/Documents/GitHub/sablefish")
libLocVec <- paste(getwd(),"/Rpackages",sep="")
.libPaths(libLocVec)
install.packages("stringr",
repos="http://cran.us.r-project.org",
dependencies=TRUE)
source("http://www.rforge.net/FSA/InstallFSA.R")
install.packages('ALKr',
repos="http://cran.us.r-project.org",
dependencies=TRUE)
library(FSA,lib=libLocVec)
library(ALKr,lib=libLocVec)
source('~/GitHub/sablefish/scripts/TagOrgFxns1.R')
source('~/GitHub/sablefish/scripts/TagOrgFxns1.R')
